//? CSS селекторы
//* Основные виды селекторов
// *  -  любые элементы
// div  - элементы с таким тегом
// #id  - элемент с таким id
// .class  - элементы с таким классом
// [name="value"]  - селекторы на атрибут
// :visited  - псевдоклассы, остальные разные условия на элемент

//todo селекторы можно комбинировать, записывая без пробелов


//* Отношения
// div p  - потомки р родителя div
// div > p  - только непосредственные потомки
// div ~ p  - правые соседи p той же вложенности
// div + p  - первый правый сосед р, если он там есть


//* Фильтр по месту среди соседей
// :first-child  - первый потомок элемента
// :last-child  - последний потомок родителя
// :only-child  – единственный потомок своего родителя, соседних элементов нет
// :nth-child(a)  – потомок номер a своего родителя, например :nth-child(2) – второй потомок
//    Нумерация начинается с 1
// :nth-child(an+b) – расширение предыдущего селектора через указание номера потомка формулой,
//    где a,b – константы, а под n подразумевается любое целое число
//    :nth-child(2n+1) даст элементы номер 1, 3…, то есть нечётные.


//* Фильтр среди соседей с тем же тегом
// :first-of-type
// :last-of-type
// :only-of-type
// :nth-of-type
// :nth-last-of-type


//* Селекторы атрибутов
// [attr]  - атрибут установлен
// [attr="val"]  – атрибут равен val
// [attr^="val"]  – атрибут начинается с val, например "value"
// [attr|="val"]  – атрибут равен val или начинается с val-, например равен "val-1"
// [attr*="val"]  – атрибут содержит подстроку val, например равен "myvalue"
// [attr~="val"]  – атрибут содержит val как одно из значений через пробел
// [attr$="val"]  – атрибут заканчивается на val, например равен "myval"


//* Другие псевдоклассы
// :not(селектор) – все, кроме подходящих под селектор
// :focus – в фокусе
// :hover – под мышью
// :empty – без детей (даже без текстовых)
// :checked, :disabled, :enabled – состояния INPUT
// :target – этот фильтр сработает для элемента, ID которого совпадает с анкором #... текущего URL


//* Псевдоэлементы ::before, ::after
// При помощи псевдоэлементов ::before и ::after можно добавлять содержимое в начало и конец элемента