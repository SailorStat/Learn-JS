//? Методы RegExp и String
//* str.match(regexp)
// Ищет совпадения с regexp в str, работает в 3 режимах:
//      - Если совпадений нет, возвращает null
//      - Если нет флага g, то возвращает первое совпадение в виде массива со скобочными группами
//          и свойствами index и input
//      - Если флаг g есть, то возвращает массив совпадений


//* str.matchAll(regexp)
// Возвращает перебираемый объект
// Каждое совпадение массив со скобочными группами
// Без совпадений также возвращается null


//* str.split(regexp|substr, limit)
console.log('12-12-12-12-12'.split('-', 3))


//* str.search(regexp)
// Возвращает индекс первого совпадения в строке
console.log('12-12-12-12-12'.search(/-\d\d-/))


//* str.replace(substr|regexp, substr2|func)
// Заменяет в str первое substr или regexp на substr2 или функцию
// Для замены всех совпадений нужно regexp c флагом g
// Спецсимволы:
//    $$ - вставляет $
//    $& - вставляет найденное совпадение
//    $` - вставляет часть строки до совпадения
//    &' - вставляет часть строки после совпадения
//    $n - вставляет содержимое n-ной скобки
//    $<имя> - вставляет содержимое скобки с указанным именем

// Для замен с функциями func(match, p1, p2, ..., pn, offset, input, groups)
//    match - совпадение
//    p1, p2... - содержимое скобок
//    offset - позиция совпадения
//    input – исходная строка
//    groups - объект с содержимым именованных скобок


//* regexp.exec(str)
// Если нет флага g, то ведёт себя, как str.match(regexp)
// Если совпадения есть, то возвращает первое сопадение
//    В атрибут lastIndex записывает позицию после него
// При новом вызове возвращет следующее совпадение
//    Так до тех пор, пока совпадения есть
// Если совпадений нет, возвращает null

//todo Мы можем сами записать параметр lastIndex в значение regexp
//todo    тогда поиск начнётся с этого индекса


//* regexp.test(str)
// Возвращает true, если совпадение есть, иначе false
// После каждого вызова обновляется lastIndex
//    Чтобы избежать ошибки, надо каждый раз сбрасывать индекс