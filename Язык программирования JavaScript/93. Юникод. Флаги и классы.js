//? Юникод: флаг "u" и класс \p{...}
//* Флаг u для обработки суррогатных пар
// Обычные символы состоят из 2 байтов
// Суррогатные пары состоят из 4 байтов
// Чтобы суррогатные пары правильно обрабатывались, нужен флаг u

//* Юникодные свойства \p{...}
// У символов есть свойства, которые описывают, к какому роду они относятся
// Letter - буква любого алфавита, Number - цифра и т.д.
// Поиск такого символа идёт с обязательным флагом  u  через синтаксис \p{...}
{const str = "A ბ ㄱ"
console.log(str.match(/\p{L}/gu))}

// Значение символа может быть сужено через модификаторы
// Буквы L:
//    в нижнем регистре Ll,
//    модификаторы Lm,
//    заглавные буквы Lt,
//    в верхнем регистре Lu,
//    прочие Lo.
// Числа N:
//    десятичная цифра Nd,
//    цифры обозначаемые буквами (римские) Nl,
//    прочие No.
// Знаки пунктуации P:
//    соединители Pc,
//    тире Pd,
//    открывающие кавычки Pi,
//    закрывающие кавычки Pf,
//    открывающие скобки Ps,
//    закрывающие скобки Pe,
//    прочее Po.
// Отметки M (например, акценты):
//    двоеточия Mc,
//    вложения Me,
//    апострофы Mn.
// Символы S:
//    валюты Sc,
//    модификаторы Sk,
//    математические Sm,
//    прочие So.
// Разделители Z:
//    линия Zl,
//    параграф Zp,
//    пробел Zs.
// Прочие C:
//    контрольные Cc,
//    форматирование Cf,
//    не назначенные Cn,
//    для приватного использования Co,
//    суррогаты Cs.
// Hex_Digit включает символы для шестнадцатеричных чисел: 0-9, a-f


//* Пример: шестнадцатеричные числа
{
  const regexp = /x\p{Hex_Digit}\p{Hex_Digit}\p{Hex_Digit}/gu
  const str = 'Need color xF6C'
  console.log(str.match(regexp))
}


//* Пример: китайские иероглифы
// Для установления языковой семьи поиска есть свойство script
{
  const regexp = /\p{sc=Han}/gu
  const str = `Hello Привет 你好 123_456`
  console.log(str.match(regexp))
}